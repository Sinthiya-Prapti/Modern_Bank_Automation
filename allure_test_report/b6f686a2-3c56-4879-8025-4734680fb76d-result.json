{"name": "test_tc_mb_cus_003[test_case0]", "status": "failed", "statusDetails": {"message": "Failed: Test Failed. Expected Error Message does not match with Actual Error Message.", "trace": "browser_config = (<selenium.webdriver.firefox.webdriver.WebDriver (session=\"177b3c69-6ed0-42a7-8ca9-8ff9b837ce7c\")>, <selenium.webdriver.support.wait.WebDriverWait (session=\"177b3c69-6ed0-42a7-8ca9-8ff9b837ce7c\")>)\ntest_case = {'customer': [{'TC_CUS_001': {'_comment': 'Verify customer registration fails with invalid (Empty) Full Name and valid...'test@test.com', 'expected_result': 'Password must be at least 6 characters long.', 'fullname': 'Test Manager', ...}}]}\n\n    @pytest.mark.parametrize(\"test_case\",load_all_test_data(\"../data/data.json\"))\n    def test_tc_mb_cus_003(browser_config, test_case):\n        logging.info(\"TC_MB_CUS_003 Started..\")\n        logging.info(test_case[\"customer\"][2][\"TC_CUS_003\"][\"_comment\"])\n        driver, wait = browser_config\n    \n        # create object for CustomerPage class\n        customer_registration_page = CustomerRegistrationPage(driver,wait)\n    \n        # 2. Click on Open Your Account Button\n        try:\n            customer_registration_page.click_customer_open_account_button()\n            logging.info(\"Open Your Account Button Clicked successfully.\")\n        except Exception as e:\n            logging.error(\"Element 'Open Your Account Button' not found with Explicit wait.\")\n            pytest.fail(\"Element 'Open Your Account Button' not found with Explicit wait.\")\n    \n        time.sleep(2)\n    \n        # 3. Enter valid value of Full Name\n        try:\n            customer_registration_page.enter_customer_fullname(test_case[\"customer\"][2][\"TC_CUS_003\"][\"fullname\"])\n            logging.info(\"Valid Full Name Enter successfully.\")\n        except Exception as e:\n            logging.error(\"Element 'Full Name' not found with Explicit wait.\")\n            pytest.fail(\"Test Failed. Element 'Full Name' not found with Explicit wait. !!!\")\n    \n        # 4. Enter Wrong (without @) value of Email\n        try:\n            customer_registration_page.enter_customer_email(test_case[\"customer\"][2][\"TC_CUS_003\"][\"email\"])\n            logging.info(\"Wrong Email (without @) Enter successfully.\")\n        except Exception as e:\n            logging.error(\"Element 'Email Address' not found with Explicit wait.\")\n            pytest.fail(\"Test Failed. Element 'Email Address' not found with Explicit wait. !!!\")\n    \n        # 5. Enter valid value of Password\n        try:\n            customer_registration_page.enter_customer_password(test_case[\"customer\"][2][\"TC_CUS_003\"][\"pass\"])\n            logging.info(\"Valid Password Enter successfully.\")\n        except Exception as e:\n            logging.error(\"Element 'Password' not found with Explicit wait.\")\n            pytest.fail(\"Test Failed. Element 'Password not found with Explicit wait. !!!\")\n    \n        # 6. Enter valid value of Initial Deposit Amount\n        try:\n            customer_registration_page.enter_customer_ini_deposit(test_case[\"customer\"][2][\"TC_CUS_003\"][\"deposit_amount\"])\n            logging.info(\"Valid Initial Deposit Amount Enter successfully.\")\n        except Exception as e:\n            logging.error(\"Element 'Initial Deposit Amount' not found with Explicit wait.\")\n            pytest.fail(\"Test Failed. Element 'Initial Deposit Amount' not found with Explicit wait. !!!\")\n    \n    \n        # 7. Click on the \"Register\" button.\n        try:\n            customer_registration_page.click_customer_register_button()\n            logging.info(\"Click on Register button successfully.\")\n    \n        except Exception as e:\n            logging.error(\"Element 'Register' button not found with Explicit wait.\")\n            pytest.fail(\"Test Failed. Element 'Register' button not found with Explicit wait.!!!\")\n    \n    \n        # Validate Error Message\n        expected_error_message = test_case[\"customer\"][2][\"TC_CUS_003\"][\"expected_result\"]\n        time.sleep(1)\n        capture_full_page_screenshot(driver, \"TC_MB_CUS_003_Popup_Email\")\n        logging.error(\"=======================custom log=========================\")\n        logging.error(expected_error_message)\n        logging.error(test_case[\"customer\"][2][\"TC_CUS_003\"][\"_comment\"])\n        logging.error(customer_registration_page.get_html_popup_error_message(\"Email\"))\n        logging.error(\"=======================custom log=========================\")\n    \n        if expected_error_message == customer_registration_page.get_html_popup_error_message(\"Email\"):\n            logging.info(\"Test Passed. Expected Error Message match with Actual Error Message.\")\n    \n        else:\n            logging.error(\"Test Failed. Expected Error Message does not match with Actual Error Message.\")\n            # Screenshot\n            capture_full_page_screenshot(driver, \"TC_MB_CUS_003\")\n    \n>           pytest.fail(\"Test Failed. Expected Error Message does not match with Actual Error Message.\")\nE           Failed: Test Failed. Expected Error Message does not match with Actual Error Message.\n\ntests\\test_TC_MB_CUS_003.py:89: Failed"}, "attachments": [{"name": "log", "source": "405307f5-e038-458c-9442-59baa7f9ab50-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "test_case", "value": "{'customer': [{'TC_CUS_001': {'_comment': 'Verify customer registration fails with invalid (Empty) Full Name and valid Email Address, Password and Initial Deposit.', 'fullname': '', 'email': 'test@test.com', 'pass': '123456789', 'deposit_amount': '20000', 'expected_result': 'Please fill out this field.'}}, {'TC_CUS_002': {'_comment': 'Verify customer registration fails with invalid Email Address (Empty) and valid Full Name, Password and Initial Deposit.', 'fullname': 'Test Customer', 'email': '', 'pass': '123456789', 'deposit_amount': '20000', 'expected_result': 'Please fill out this field.'}}, {'TC_CUS_003': {'_comment': 'Verify customer registration fails with invalid Email Address (Wrong, without @) and valid Full Name, Password and Initial Deposit.', 'fullname': 'Test Customer', 'email': 'test', 'pass': '123456789', 'deposit_amount': '20000', 'expected_result': \"Please include an '@' in the email address. 'test' is missing an '@'.\"}}, {'TC_CUS_004': {'_comment': 'Verify customer registration fails with invalid Email Address (Wrong, without a part following @) and valid Full Name, Password and Initial Deposit.', 'fullname': 'Test Customer', 'email': 'test@', 'pass': '123456789', 'deposit_amount': '20000', 'expected_result': \"Please enter a part following '@'. 'test@' is incomplete.\"}}, {'TC_CUS_005': {'_comment': 'Verify customer registration fails with invalid Password (Empty) and valid Full Name, Email Address and Initial Deposit.', 'fullname': 'Test Customer', 'email': 'test@test.com', 'pass': '', 'deposit_amount': '20000', 'expected_result': 'Please fill out this field.'}}, {'TC_CUS_006': {'_comment': 'Verify customer registration fails with invalid Password (< 6 Char) and valid Full Name, Email Address and Initial Deposit.', 'fullname': 'Test Customer', 'email': 'test@test.com', 'pass': '12345', 'deposit_amount': '20000', 'expected_result': 'Password must be at least 6 characters long.'}}, {'TC_CUS_007': {'_comment': 'Verify customer registration fails with invalid Initial Deposit Amount (Empty) and valid Full Name, Email Address and Password.', 'fullname': 'Test Customer', 'email': 'test@test.com', 'pass': '123456', 'deposit_amount': '', 'expected_result': 'Please fill out this field.'}}, {'TC_CUS_008': {'_comment': 'Verify customer registration fails with invalid Initial Deposit Amount (< 20) and valid Full Name, Email Address and Password.', 'fullname': 'Test Customer', 'email': 'test@test.com', 'pass': '123456', 'deposit_amount': '19', 'expected_result': 'Please fill out this field.'}}], 'manager': [{'TC_MAN_001': {'_comment': 'Verify manager registration fails with invalid (Empty) Full Name and valid Email Address, Password.', 'fullname': '', 'email': 'test@test.com', 'pass': '123456789', 'expected_result': 'Please fill out this field.'}}, {'TC_MAN_002': {'_comment': 'Verify manager registration fails with invalid Email Address (Empty) and valid Full Name, Password.', 'fullname': 'Test Manager', 'email': '', 'pass': '123456789', 'expected_result': 'Please fill out this field.'}}, {'TC_MAN_003': {'_comment': 'Verify manager registration fails with invalid Email Address (Wrong, without @) and valid Full Name, Password.', 'fullname': 'Test Manager', 'email': 'test', 'pass': '123456789', 'expected_result': \"Please include an '@' in the email address. 'test' is missing an '@'.\"}}, {'TC_MAN_004': {'_comment': 'Verify manager registration fails with invalid Email Address (Wrong, without a part following @) and valid Full Name, Password.', 'fullname': 'Test Manager', 'email': 'test@', 'pass': '123456789', 'expected_result': \"Please enter a part following '@'. 'test@' is incomplete.\"}}, {'TC_MAN_005': {'_comment': 'Verify manager registration fails with invalid Password (< 6 Char) and valid Full Name, Email Address.', 'fullname': 'Test Manager', 'email': 'test@test.com', 'pass': '12345', 'expected_result': 'Password must be at least 6 characters long.'}}]}"}], "start": 1755404233564, "stop": 1755404237937, "uuid": "9b97b274-c90c-4d94-89c8-71dadb25f9bb", "historyId": "a17a8209d84458be0d62126c81bd9def", "testCaseId": "6a9404140454e549b767a9e0f035de05", "fullName": "tests.test_TC_MB_CUS_003#test_tc_mb_cus_003", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_TC_MB_CUS_003"}, {"name": "host", "value": "prapti"}, {"name": "thread", "value": "4164-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_TC_MB_CUS_003"}], "titlePath": ["tests", "test_TC_MB_CUS_003.py"]}